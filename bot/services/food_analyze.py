from bot.services.logger import logger
from bot.config import MAX_TOKENS
from bot.services.openai_client import client
from bot.schemas.food_analyze import Ingredient, MealAnalysis
from bot.prompts.food_analyze import get_food_analysis_system_prompt, get_food_analysis_user_prompt


async def analyze_food_image(image_url: str) -> MealAnalysis:
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É –±–ª—é–¥–∞ –Ω–∞ —Å–æ—Å—Ç–∞–≤ –∏ –∫–∞–ª–æ—Ä–∏–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç OpenAI API.
    
    :param image_url: URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ –±–ª—é–¥–∞
    :return: –û–±—ä–µ–∫—Ç MealAnalysis —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
    """


    logger.info(f"–ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ–¥—ã –ø–æ —Å—Å—ã–ª–∫–µ: {image_url}")

    # messages : list[dict] = [
    #     {"role": "system", "content": get_food_analysis_system_prompt()},
    #     {"role": "user", "content": get_food_analysis_user_prompt(image_url=image_url)}
    # ]

    # completion = await client.beta.chat.completions.parse(
    #     model="gpt-4o",
    #     messages=messages,
    #     max_tokens=int(MAX_TOKENS),
    #     response_format=MealAnalysis,
    # )
    # logger.info(completion)
    # logger.info(completion.choices)
    # logger.info(completion.choices[0].message)
    # logger.info(completion.choices[0].message.model_dump())

    logger.info("–ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞.")
    
    return MealAnalysis(
            title="–ö—É—Ä–∏—Ü–∞ –∫–∞—Ä—Ä–∏ —Å —Ä–∏—Å–æ–º",
            total_weight=500,
            calories=750,
            proteins=42,
            fats=22,
            carbs=98,
            fiber=5,
            ingredients=[
                Ingredient(
                    name="–ö—É—Ä–∏—Ü–∞",
                    weight=150,
                    calories=330,
                    protein=31,
                    fat=19,
                    carbs=0,
                    fiber=0,
                ),
                Ingredient(
                    name="–†–∏—Å",
                    weight=200,
                    calories=260,
                    protein=5,
                    fat=2,
                    carbs=57,
                    fiber=1,
                ),
                Ingredient(
                    name="–ö–∞—Ä—Ä–∏ —Å–æ—É—Å",
                    weight=100,
                    calories=140,
                    protein=3,
                    fat=0,
                    carbs=18,
                    fiber=0,
                ),
                Ingredient(
                    name="–û–≤–æ—â–∏",
                    weight=50,
                    calories=20,
                    protein=3,
                    fat=1,
                    carbs=23,
                    fiber=4,
                ),
            ],
        )




# async def analyze_food_img(url : str) -> str:
#     """
#     –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É –±–ª—é–¥–∞ –Ω–∞ —Å–æ—Å—Ç–∞–≤ –∏ –∫–∞–ª–æ—Ä–∏–∏.
#     –ò—Å–ø–æ–ª—å–∑—É–µ—Ç OpenAI API.
    
#     :param url: URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ –±–ª—é–¥–∞
#     :return: –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
#     """

#     return "üçΩÔ∏è –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –±–ª—é–¥–∞:\n" \
#            "–ö–∞–ª–æ—Ä–∏–∏: 500 –∫–∫–∞–ª\n" \
#            "–ë–µ–ª–∫–∏: 30 –≥\n" \
#            "–ñ–∏—Ä—ã: 20 –≥\n" \
#            "–£–≥–ª–µ–≤–æ–¥—ã: 50 –≥"